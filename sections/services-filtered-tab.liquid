{%- liquid
  assign title_start = section.settings.heading_start
  assign title_feature = section.settings.heading_featured
  assign title_end = section.settings.heading_end
  assign sub_text = section.settings.sub_text
  assign desktop_margin_top = section.settings.desktop_margin_top
  assign desktop_margin_bottom = section.settings.desktop_margin_bottom
  assign mobile_margin_top = section.settings.mobile_margin_top
  assign mobile_margin_bottom = section.settings.mobile_margin_bottom
  assign tabs = section.blocks | where: 'type', 'tabs'
  assign items = section.blocks | where: 'type', 'items'
-%}

<style>
  .service_tab_section {
     margin-top: {{ mobile_margin_top | append: 'px' }};
     margin-bottom: {{ mobile_margin_bottom | append: 'px' }};
  }

  .filters {
    margin-top: 20px;
    display: flex;
    display: -webkit-flex;
    flex-wrap: wrap;
    justify-content: center;
  }
  .service_tab_section .grid li img {
    border-radius: 10px;
    width: 100%;
    height: 100%;
    aspect-ratio: 1/1;
    object-fit: cover;
  }
  .filters .filter_tab_button {
    padding: 10px 25px;
    margin: 0px 5px;
    background-color: #f5f5f5;
    border: none;
    border-radius: 10px;
    transition: 150ms;
    color: #000000;
    font-size: 16px;
    line-height: 25px;
    font-weight: 700;
    position: relative;
    outline: none;
    cursor: pointer;
  }
  .filters .filter_tab_button.is-checked {
    background-color: #845ec2;
    color: #ffffff;
  }
  .service_tab_section .grid {
    margin: 40px auto;
    padding: 0;
    list-style-type: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    box-sizing: border-box;
    position: relative;
    column-gap: 2%;
  }
  .service_tab_section .grid > li {
    width: 23.5%;
    overflow: hidden;
    margin-bottom: 2%;
    border-radius: 15px;
    border: 1px solid #e5e5e5;
    box-sizing: border-box;
  }
  .service_tab_section .wrapper{
    margin: auto;
    display: inline;
    width: 100%;
  }
  .services_item > div {
    padding: 20px;
    background-color: #f5f5f5;
    color: #000000;
    height: 100%;
  }
  .services_item p {
    font-size: 18px;
    line-height: 24px;
    font-family: 'Lato', sans-serif;
  }
   .service_title{
     font-family: system-ui;
     margin: 0;
     margin-top: 15px;
     text-align: center;
     color: #845ec2;
     line-height: 1;
     font-size: clamp(14px,2vw,16px);
     font-weight: 600;
   }
   .service_item_sizer{
     width: 23.5%;
     position: absolute;
   }
   .gutter_sizer {
     width: 2%;
     pointer-events: none;
     position: absolute;
   }
  @media (max-width: 767px) {
    .filters .filter_tab_button {
      padding: 5px 10px;
      margin: 5px;
    }
    .service_tab_section .grid {
      column-gap: 2%;
    }
    .gutter_sizer {
      width: 2%;
    }
    .service_tab_section  .grid > li {
      width: 32%;
    }
    .service_item_sizer{
      width: 32%;
    }
    .services_item > div {
       padding: 10px;
     }
    .services_item p {
      font-size: 16px;
      line-height: 22px;
    }
    .service_tab_section .grid {
     justify-content: center;
     margin: 20px auto;
    }
  }
  @media (max-width: 600px) {
    .service_tab_section .grid {
      column-gap: 2%;
    }
    .gutter_sizer {
      width: 2%;
    }
    .service_item_sizer{
      width: 49%;
    }
   .service_tab_section  .grid > li {
      width: 49%;
    }
  }
  @media (min-width: 768px) {
    .service_tab_section{
        margin-top: {{ desktop_margin_top | append: 'px' }};
        margin-bottom: {{ desktop_margin_bottom | append: 'px' }};
    }
  }
</style>
{% if items != blank %}
  <section class="service_tab_section">
    <div class="container container-{{ section.settings.container }}">
      <div class="magzine_section_header">
        {%- if title_start != blank -%}
          <div class="magzine_section_title">
            {{- title_start -}}
            <span class="halfStyled" data-content="{{ title_feature }}">{{ title_feature }}</span>
            {{- title_end -}}
          </div>
        {%- else -%}
          <div class="magzine_section_title">Magaz<span class="halfStyled" data-content="i">i</span>nes</div>
        {%- endif -%}
        {%- if sub_text != blank -%}
          {{ sub_text }}
        {%- endif -%}
      </div>
      <div class="filters button-group">
        <button class="filter_tab_button is-checked " data-filter="*">All</button>
        {% for block in tabs %}
          {% liquid
            assign tab_id = block.settings.tab_id
            assign tab_title = block.settings.tab_title
          %}
          <button class="filter_tab_button" data-filter=".{{- tab_id -}}">{{- tab_title -}}</button>
        {% endfor %}
      </div>
      <div class="wrapper">
        <ul class="grid">
          <div class="service_item_sizer"></div>
          <div class="gutter_sizer"></div>
          {% for item in items %}
            {% liquid
              assign service_image = item.settings.image
              assign id = item.settings.id
              assign title = item.settings.title
              assign url = item.settings.url
            %}
            <li class="services_item {{ id }}" data-category="{{- id -}}">
              <div>
                <img
                  src="{{service_image | image_url }}"
                  alt="gallery-img"
                  width="225"
                  height="225"
                >
                <div>
                  <a href="{{url}}">
                    <h3 class="service_title">{{ title }}</h3>
                  </a>
                </div>
              </div>
            </li>
          {% endfor %}
        </ul>
      </div>
    </div>
  </section>
{% endif %}

<script src="{{ "isotope.pkgd.min.js" | asset_url  }}" defer></script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    $(document).ready(function () {
      // init Isotope
      var $grid = $('.grid').isotope({
        itemSelector: '.services_item',
        layoutMode: 'masonry',
        masonry: {
          columnWidth: '.service_tab_section .service_item_sizer',
          gutter: '.service_tab_section .gutter_sizer',
        },
      });

      // filter functions
      var filterFns = {
        // show if number is greater than 50
        numberGreaterThan50: function () {
          var number = $(this).find('.number').text();
          return parseInt(number, 10) > 50;
        },
        // show if name ends with -ium
        ium: function () {
          var name = $(this).find('.name').text();
          return name.match(/ium$/);
        },
      };

      // bind filter button click
      $('.filters').on('click', 'button', function () {
        var filterValue = $(this).attr('data-filter');
        // use filterFn if matches value
        filterValue = filterFns[filterValue] || filterValue;
        $grid.isotope({
          filter: filterValue,
        });
      });

      // change is-checked class on buttons
      $('.button-group').each(function (i, buttonGroup) {
        var $buttonGroup = $(buttonGroup);
        $buttonGroup.on('click', 'button', function () {
          $buttonGroup.find('.is-checked').removeClass('is-checked');
          $(this).addClass('is-checked');
        });
      });
      $('.service_tab_section .filters .is-checked').click();
    });
  });
</script>
{% schema %}
{
  "name": "Services Filter Tab",
  "settings": [
    {
      "type": "select",
      "id": "container",
      "label": "t:sections.layout.container.option",
      "default": "1770",
      "options": [
        {
          "value": "1170",
          "label": "t:sections.layout.container.option4"
        },
        {
          "value": "1370",
          "label": "t:sections.layout.container.option8"
        },
        {
          "value": "1470",
          "label": "t:sections.layout.container.option5"
        },
        {
          "value": "1570",
          "label": "t:sections.layout.container.option6"
        },
        {
          "value": "1770",
          "label": "t:sections.layout.container.option3"
        },
        {
          "value": "full",
          "label": "t:sections.layout.container.option2"
        }
      ]
    },
    {
      "type": "text",
      "id": "heading_start",
      "label": "Title Start",
      "default": "Our Serv"
    },
    {
      "type": "textarea",
      "id": "heading_featured",
      "label": "Title Feature",
      "default": "i"
    },
    {
      "type": "text",
      "id": "heading_end",
      "label": "Title End",
      "default": "ces"
    },
    {
      "type": "richtext",
      "id": "sub_text",
      "label": "Sub Text"
    },
    {
      "type": "header",
      "content": "Desktop Settings"
    },
    {
      "type": "range",
      "id": "desktop_margin_top",
      "label": "Margin Top (Desktop)",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "desktop_margin_bottom",
      "label": "Margin Bottom (Desktop)",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 40,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Mobile Settings"
    },
    {
      "type": "range",
      "id": "mobile_margin_top",
      "label": "Margin Top (Mobile)",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 20,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_margin_bottom",
      "label": "Margin Bottom (Mobile)",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 20,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "name": "Tab",
      "type": "tabs",
      "settings": [
        {
          "type": "text",
          "id": "tab_title",
          "label": "Tab Title"
        },
        {
          "type": "text",
          "id": "tab_id",
          "label": "Tab Id",
          "info": "Id must be unique between different tabs"
        }
      ]
    },
    {
      "name": "Item",
      "type": "items",
      "settings": [
        {
          "type": "text",
          "id": "id",
          "label": "Tab Id",
          "info": "Id must be same as Id mention in Tab"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Url"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Services Filter Tab",
      "settings": {}
    }
  ]
}
{% endschema %}
